{"version":3,"sources":["Components/Lister/Header/Title.js","Components/Lister/Menu/Facets.js","Components/Lister/Menu/RegionFacetGroups.js","Components/Lister/Menu/CompletionStatusFacetGroups.js","Components/Lister/Menu/DoneButton.js","Components/Lister/Menu/Menu.js","Components/Lister/Header/Search.js","Components/Lister/Header/BackButton.js","Components/Lister/Header/Sort.js","Components/Lister/Header/Header.js","Components/Footer/Footer.js","State/State.js","Components/Lister/ListView/ImageCarousel.js","Components/Lister/ListView/ListView.js","Components/HomePage/HomePage.js","Components/PDP/Climbers.js","Components/PDP/TopInputFields.js","Components/PDP/Views.js","Components/PDP/CompleteButton.js","Components/PDP/DescentDurationInput.js","Components/PDP/FinishTimeInput.js","Components/PDP/TotalWalkTimeInput.js","Components/PDP/MountainPage.js","App.js","reportWebVitals.js","index.js"],"names":["Title","title","className","defaultProps","Facets","name","useState","ticked","setTicked","onClick","state","classnames","alt","RegionFacetGroups","regions","showFacets","setShowFacets","containerRef","useRef","facetRef","useEffect","facetHeight","current","getBoundingClientRect","height","style","ref","map","region","index","CompletionStatusFacetGroups","DoneButton","mountains","setMountains","activeFilter","setActiveFilter","filter","document","querySelectorAll","filterArray","forEach","filterInnerText","innerText","firstElementChild","classList","contains","push","console","log","searchMountains","mountain","length","includes","complete","section","remove","Menu","Search","searchString","setSearchString","onKeyUp","e","preventDefault","target","value","toLowerCase","type","placeholder","minLength","required","defaultValue","BackButton","window","history","back","Sort","sort","Header","pathname","useLocation","isListerPage","closeFilter","addEventListener","htmlFor","onChange","sortOrder","result","a","b","difficulty","handleSort","Footer","date","Date","getFullYear","class","id","image","imageNumber","averageTime","climbers","startTime","ascentDuration","summitTime","views","descentDuration","finishTime","totalWalkTime","ImageCarousel","handleLeftClick","handleRightClick","pdpMountain","selectedMountain","src","ListView","handleClickThrough","newData","handleComplete","to","HomePage","Climbers","setClimbers","onBlur","TopInputFields","setSummitTime","summitTimeCalc","arr","split","convertNST","convertAD","measuredTime","setSeconds","summitTimeString","toISOString","substr","setState","stateName","Views","setViews","CompleteButton","DescentDurationInput","setDescentDuration","FinishTimeInput","setFinishTime","TotalWalkTimeInput","setTotalWalkTime","MountainPage","setDate","setStartTime","setAscentDuration","topInputValues","handleUpdate","reduce","acc","finishTimeCalc","convertDD","finishTimeString","totalWalkTimeCalc","totalWalkTimeString","App","localStorage","setItem","JSON","stringify","parse","getItem","filteredMountains","setFilteredMountains","setSelectedMountain","mountainName","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c8d291ff.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Title = ({ title }) => {\r\n  return <p className=\"title\"> {title}</p>;\r\n};\r\n\r\nTitle.defaultProps = {\r\n  title: \"Wainwright Tracker\",\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport { FaCheck } from \"react-icons/fa\";\r\nimport { useState } from \"react\";\r\nimport classnames from \"classnames\";\r\n\r\nconst Facets = ({ name }) => {\r\n  const [ticked, setTicked] = useState(false);\r\n\r\n  //alternative for the classnames detailed below\r\n  // let classes ='fa-check';\r\n  // classes += ticked ? \" show-fa-check\" : \"\"\r\n\r\n  return (\r\n    //the below effectively toggles between what the state is at present. So, ticked would be not ticked and vice versa\r\n    <div\r\n      className=\"filter\"\r\n      onClick={() => {\r\n        setTicked((state) => !state);\r\n        // addToArray();\r\n      }}\r\n    >\r\n      <FaCheck\r\n        className={classnames(\"fa-check\", {\r\n          \"show-fa-check\": ticked === true,\r\n        })}\r\n        alt=\"filter ticked\"\r\n      />\r\n      <p>{name}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Facets;\r\n","import { React, useRef, useState, useEffect } from \"react\";\r\nimport { FaChevronDown } from \"react-icons/fa\";\r\nimport Facets from \"./Facets\";\r\n\r\n//open / close filter drawer\r\nconst RegionFacetGroups = ({ name }) => {\r\n  const [regions, setRegions] = useState([\r\n    \"Central\",\r\n    \"Eastern\",\r\n    \"Far Eastern\",\r\n    \"Northern\",\r\n    \"Southern\",\r\n    \"Western\",\r\n  ]);\r\n  const [showFacets, setShowFacets] = useState(false);\r\n  const containerRef = useRef(null);\r\n  const facetRef = useRef(null);\r\n\r\n  // const openFilterDrawer = (e) => {\r\n  useEffect(() => {\r\n    const facetHeight = facetRef.current.getBoundingClientRect().height;\r\n    if (showFacets) {\r\n      containerRef.current.style.height = `${facetHeight}px`;\r\n    } else {\r\n      containerRef.current.style.height = \"0px\";\r\n    }\r\n  }, [showFacets]);\r\n\r\n  // const regionFacetGroup = <FacetGroups name=\"Region\" />;\r\n  // const completionStatusFacetGroup = <FacetGroups name=\"Completion Status\" />;\r\n  // console.log(regionFacetGroup.props.name === \"Region\");\r\n  // console.log(completionStatusFacetGroup);\r\n  //JS way of completing dynamic height work\r\n  // const filterGroup = document.querySelectorAll(\".filter-group\");\r\n  // const filterWrapper = document.querySelector(\".filter-wrapper\");\r\n  // const filterOptions = document.querySelector(\".filter-options\");\r\n  // const filterWrapperComplete = document.querySelector(\r\n  //   \".filter-wrapper-complete\"\r\n  // );\r\n  // const filterOptionsComplete = document.querySelector(\r\n  //   \".filter-options-complete\"\r\n  // );\r\n  // // console.log(e)\r\n\r\n  // const wrapperHeight = filterWrapper.getBoundingClientRect().height;\r\n  // const filterOptionsHeight = filterOptions.getBoundingClientRect().height;\r\n  // const wrapperHeightComplete =\r\n  //   filterWrapperComplete.getBoundingClientRect().height;\r\n  // const filterOptionsHeightComplete =\r\n  //   filterOptionsComplete.getBoundingClientRect().height;\r\n  // const element = e.currentTarget.classList;\r\n  // console.log(e.currentTarget.innerText, e);\r\n  // const addClass = e.currentTarget.innerText.split(\" \")[0];\r\n  // console.log(addClass);\r\n  // element.add(addClass);\r\n\r\n  // if (element.contains(\"Region\") && wrapperHeight === 0) {\r\n  //   filterWrapper.style.height = `${filterOptionsHeight}px`;\r\n  // } else if (element.contains(\"Region\") && filterWrapper.style.height !== 0) {\r\n  //   filterWrapper.style.height = 0;\r\n  // } else if (element.contains(\"Completion\") && wrapperHeightComplete === 0) {\r\n  //   filterWrapperComplete.style.height = `${filterOptionsHeightComplete}px`;\r\n  // } else {\r\n  //   filterWrapperComplete.style.height = 0;\r\n  // }\r\n  // };\r\n\r\n  return (\r\n    //look at using {facetgroup name = region to return below....do same for completion status}\r\n    <>\r\n      <div className=\"filter-group\" onClick={() => setShowFacets(!showFacets)}>\r\n        <p> {name} </p>\r\n        <FaChevronDown className=\"fa-chevron-down\" />\r\n      </div>\r\n      <div className=\"filter-wrapper\" ref={containerRef}>\r\n        <div className=\"filter-options\" ref={facetRef}>\r\n          {regions.map(\r\n            (region, index) => (\r\n              <Facets name={region} key={index} />\r\n            ) //returns component directly\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegionFacetGroups;\r\n","import { React, useRef, useState, useEffect } from \"react\";\r\nimport { FaChevronDown } from \"react-icons/fa\";\r\nimport Facets from \"./Facets\";\r\n\r\n//open / close filter drawer\r\nconst CompletionStatusFacetGroups = ({ name }) => {\r\n  const [showFacets, setShowFacets] = useState(false);\r\n  const containerRef = useRef(null);\r\n  const facetRef = useRef(null);\r\n\r\n  // const openFilterDrawer = (e) => {\r\n  useEffect(() => {\r\n    const facetHeight = facetRef.current.getBoundingClientRect().height;\r\n    if (showFacets) {\r\n      containerRef.current.style.height = `${facetHeight}px`;\r\n    } else {\r\n      containerRef.current.style.height = \"0px\";\r\n    }\r\n  }, [showFacets]);\r\n\r\n  return (\r\n    //look at using {facetgroup name = region to return below....do same for completion status}\r\n    <>\r\n      <div className=\"filter-group\" onClick={() => setShowFacets(!showFacets)}>\r\n        <p> {name} </p>\r\n        <FaChevronDown className=\"fa-chevron-down\" />\r\n      </div>\r\n      <div className=\"filter-wrapper-complete\" ref={containerRef}>\r\n        <div className=\"filter-options-complete\" ref={facetRef}>\r\n          <Facets name=\"Complete\" />\r\n          <Facets name=\"Not Complete\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CompletionStatusFacetGroups;\r\n","import React from \"react\";\r\n\r\nconst DoneButton = ({\r\n  mountains,\r\n  setMountains,\r\n  activeFilter,\r\n  setActiveFilter,\r\n}) => {\r\n  const clickDone = () => {\r\n    // filter mountains based on ticks\r\n    const filter = document.querySelectorAll(\".filter\");\r\n    const filterArray = [];\r\n\r\n    filter.forEach((filter) => {\r\n      const filterInnerText = filter.innerText;\r\n      if (filter.firstElementChild.classList.contains(\"show-fa-check\")) {\r\n        filterArray.push(filterInnerText);\r\n      } else {\r\n        return;\r\n      }\r\n      console.log(filterArray);\r\n    });\r\n\r\n    const searchMountains = mountains.filter((mountain) => {\r\n      if (\r\n        filterArray.length === 0 ||\r\n        (filterArray.includes(\"Complete\") &&\r\n          filterArray.includes(\"Not Complete\"))\r\n      ) {\r\n        return mountains;\r\n      } else if (\r\n        filterArray.includes(mountain.region) &&\r\n        filterArray.includes(\"Not Complete\")\r\n      ) {\r\n        console.log(mountain);\r\n        return mountain;\r\n      } else if (filterArray.includes(mountain.region)) {\r\n        return mountain.region;\r\n      } else if (filterArray.includes(\"Complete\")) {\r\n        return mountain.complete === true;\r\n      } else if (filterArray.includes(\"Not Complete\")) {\r\n        return mountain.complete === false;\r\n      } //doesn't work\r\n\r\n      //need to cater for region and complete, region and not complete\r\n    });\r\n\r\n    //need to cater for region and complete, region and not complete\r\n\r\n    setMountains(searchMountains);\r\n    setActiveFilter(!activeFilter);\r\n    const section = document.querySelectorAll(\"section\");\r\n    section.forEach((section) => {\r\n      section.classList.remove(\"opaque-background\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"btn-container\" onClick={clickDone}>\r\n      <button className=\"done-btn\" alt=\"done button\">\r\n        Done\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoneButton;\r\n","// import Facets from \"./Facets\";\r\nimport React from \"react\";\r\nimport RegionFacetGroups from \"./RegionFacetGroups\";\r\nimport CompletionStatusFacetGroups from \"./CompletionStatusFacetGroups\";\r\nimport DoneButton from \"./DoneButton\";\r\n\r\nconst Menu = ({ mountains, setMountains, activeFilter, setActiveFilter }) => {\r\n  // const [regions, setRegions] = useState([\r\n  //   \"Central\",\r\n  //   \"Eastern\",\r\n  //   \"Far Eastern\",\r\n  //   \"Northern\",\r\n  //   \"Southern\",\r\n  //   \"Western\",\r\n  // ]);\r\n\r\n  return (\r\n    <div\r\n      className={`filter-container ${\r\n        activeFilter ? \"show-filter-container\" : \"\"\r\n      }`}\r\n    >\r\n      <RegionFacetGroups name=\"Region\" />\r\n      <CompletionStatusFacetGroups name=\"Completion Status\" />\r\n      <DoneButton\r\n        mountains={mountains}\r\n        setMountains={setMountains}\r\n        activeFilter={activeFilter}\r\n        setActiveFilter={setActiveFilter}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import { FaSearch } from \"react-icons/fa\";\r\nimport { React, useState } from \"react\";\r\n\r\nconst Search = ({ mountains, setMountains }) => {\r\n  const [searchString, setSearchString] = useState(\"\");\r\n\r\n  const handleFilter = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.value);\r\n    setSearchString(e.target.value.toLowerCase());\r\n    //const searchString = e.target.value.toLowerCase();\r\n    console.log(searchString);\r\n    console.log(searchString.length);\r\n    const searchMountains = mountains.filter((mountain) => {\r\n      //console.log(searchString.length);\r\n      if (searchString.length === 0) {\r\n        return mountains;\r\n      } else {\r\n        console.log(mountain.name);\r\n        return mountain.name.toLowerCase().includes(searchString);\r\n      }\r\n    });\r\n    // console.log(searchMountains);\r\n    setMountains(searchMountains);\r\n  };\r\n\r\n  return (\r\n    <form className=\"search-form\">\r\n      <FaSearch className=\"fa-search\" />\r\n      <input\r\n        //onInput={(e) => setSearchString(e.target.value)}\r\n        onKeyUp={handleFilter}\r\n        className=\"input-field search\"\r\n        alt=\"search field\"\r\n        type=\"text\"\r\n        placeholder=\"Find Wainwright\"\r\n        name=\"search\"\r\n        minLength=\"1\"\r\n        required=\"\"\r\n        defaultValue={searchString}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { FaArrowLeft } from \"react-icons/fa\";\r\n\r\nconst BackButton = () => {\r\n  return (\r\n    <FaArrowLeft\r\n      onClick={() => {\r\n        window.history.back();\r\n      }}\r\n      alt=\"back to previous page\"\r\n      className=\"fa-arrow-left back-btn\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default BackButton;\r\n","import React from \"react\";\r\n\r\nconst Sort = ({ sort }) => {\r\n  return (\r\n    <option value={sort} alt={sort}>\r\n      {sort}\r\n    </option>\r\n  );\r\n};\r\n\r\nexport default Sort;\r\n","import React, { useState } from \"react\";\r\nimport Title from \"./Title\";\r\nimport Menu from \"../Menu/Menu\";\r\nimport Search from \"./Search\";\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport BackButton from \"./BackButton\";\r\nimport Sort from \"./Sort\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Header = ({\r\n  mountains,\r\n  setMountains,\r\n  activeFilter,\r\n  setActiveFilter,\r\n  searchString,\r\n  setSearchString,\r\n}) => {\r\n  const { pathname } = useLocation();\r\n  const isListerPage = pathname === \"/lister\";\r\n\r\n  const handleScroll = () => {\r\n    const navHeader = document.querySelector(\".nav-header\");\r\n    const secondNav = document.querySelector(\".second-nav\");\r\n    const nav = document.querySelector(\".nav\");\r\n    const scrollDepth = window.scrollY;\r\n    const secondNavHeight = secondNav.getBoundingClientRect().height;\r\n    // console.log(scrollDepth);\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    //add sticky second nav when user scrolls up\r\n    if (this.oldScroll > this.scrollY && scrollDepth > 30) {\r\n      nav.classList.add(\"fixed-nav\");\r\n    } else {\r\n      nav.classList.remove(\"fixed-nav\");\r\n    }\r\n    this.oldScroll = this.scrollY;\r\n\r\n    //   sticky top header when user scrolls down\r\n    if (!nav.classList.contains(\"fixed-nav\") && scrollDepth > secondNavHeight) {\r\n      navHeader.classList.add(\"fixed-nav\");\r\n    } else {\r\n      navHeader.classList.remove(\"fixed-nav\");\r\n    }\r\n  };\r\n\r\n  //Remove background and filter when the filters are open and the user scrolls / clicks on the product card\r\n  const section = document.querySelectorAll(\"section\");\r\n  const closeFilter = () => {\r\n    if (pathname === \"/lister\") {\r\n      setActiveFilter(false);\r\n    }\r\n  };\r\n\r\n  window.addEventListener(\"scroll\", closeFilter);\r\n  section.forEach((section) => {\r\n    section.addEventListener(\"click\", closeFilter);\r\n  });\r\n\r\n  //adding sort by functionality\r\n  const [sort, setSort] = useState([\r\n    \"A-Z\",\r\n    \"Z-A\",\r\n    \"Height: High - Low\",\r\n    \"Height: Low - High\",\r\n    \"Difficulty: High - Low\",\r\n    \"Difficulty: Low - High\",\r\n  ]);\r\n\r\n  const handleSort = (sortOrder) => {\r\n    //taking in parameter of e.target.value\r\n    let result = [];\r\n    switch (sortOrder) {\r\n      case \"A-Z\":\r\n        result = mountains.sort((a, b) => {\r\n          if (a.name > b.name) {\r\n            console.log(a.name, b.name);\r\n            return 1;\r\n          } else {\r\n            return -1;\r\n          }\r\n        });\r\n        break;\r\n      // result = mountains.sort(); //shorthand for A-Z\r\n      case \"Z-A\":\r\n        result = mountains.sort((a, b) => {\r\n          if (a.name > b.name) {\r\n            console.log(a.name, b.name);\r\n            return -1;\r\n          } else {\r\n            return 1;\r\n          }\r\n        });\r\n        break;\r\n      // result = mountains.sort().reverse(); //shorthand for Z-A\r\n      case \"Height: High - Low\":\r\n        result = mountains.sort((a, b) => {\r\n          if (a.height > b.height) {\r\n            return -1;\r\n          } else {\r\n            return 1;\r\n          }\r\n        });\r\n        break;\r\n      case \"Height: Low - High\":\r\n        result = mountains.sort((a, b) => {\r\n          if (a.height > b.height) {\r\n            return 1;\r\n          } else {\r\n            return -1;\r\n          }\r\n        });\r\n        break;\r\n      case \"Difficulty: High - Low\":\r\n        result = mountains.sort((a, b) => a.difficulty > b.difficulty); //this is the shorthand when you're justing returning one thing\r\n        console.log(result);\r\n        break;\r\n      case \"Difficulty: Low - High\":\r\n        result = mountains.sort((a, b) => {\r\n          if (a.difficulty > b.difficulty) {\r\n            return 1;\r\n          } else {\r\n            return -1;\r\n          }\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setMountains([...result]); //spreading creates a new instance which causes the App to re-render in a new order\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <nav className=\"nav\">\r\n        <div className=\"nav-header\">\r\n          <BackButton />\r\n          <Title className=\"title\" />\r\n          {isListerPage && (\r\n            <button className=\"nav-toggle menu-btn\" alt=\"nav toggle\">\r\n              <FaBars\r\n                className=\"fa-bars\"\r\n                onClick={() => setActiveFilter(!activeFilter)}\r\n              />\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <Menu\r\n          mountains={mountains}\r\n          setMountains={setMountains}\r\n          activeFilter={activeFilter}\r\n          setActiveFilter={setActiveFilter}\r\n        />\r\n        {isListerPage && (\r\n          <div className=\"second-nav\">\r\n            <Search\r\n              mountains={mountains}\r\n              setMountains={setMountains}\r\n              searchString={searchString}\r\n              setSearchString={setSearchString}\r\n            />\r\n            <form className=\"sort-form\">\r\n              <label className=\"label\" htmlFor=\"cars\">\r\n                Sort\r\n              </label>\r\n              <select\r\n                name=\"sort\"\r\n                className=\"sort\"\r\n                onChange={(e) => handleSort(e.target.value)}\r\n              >\r\n                {sort.map((sort) => (\r\n                  <Sort key={sort} sort={sort} />\r\n                ))}\r\n              </select>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const Footer = () => {\r\n  //dynamically add the date\r\n  const date = new Date().getFullYear(); //setting a date variable which can be used within HTML\r\n\r\n  return (\r\n    <div>\r\n      <footer class=\"footer\">\r\n        JM Development Inc&copy;.<span class=\"date\">{date} </span>{\" \"}\r\n      </footer>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","//best location for images is within the puiblic folder as react serves the public folder onto the local server.\r\n//We have access to these within components by using /FolderName/ImageName\r\n\r\nconst state = [\r\n  {\r\n    id: 0,\r\n    name: \"Arnison Crag\",\r\n    image: [\r\n      \"images/arnison.jpg\",\r\n      \"images/arnison 2.jpg\",\r\n      \"images/arnison 3.jpg\",\r\n    ],\r\n    imageNumber: 0,\r\n    region: \"Eastern\",\r\n    height: 1424,\r\n    averageTime: \"2 Hours\",\r\n    difficulty: \"2 / 5\",\r\n    complete: false,\r\n    climbers: \"\",\r\n    date: \"\",\r\n    startTime: \"\",\r\n    ascentDuration: \"\",\r\n    summitTime: \"\",\r\n    views: \"\",\r\n    descentDuration: \"\",\r\n    finishTime: \"\",\r\n    totalWalkTime: \"\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Blencathra\",\r\n    image: [\r\n      \"images/blencathra.jpg\",\r\n      \"images/blencathra 2.jpg\",\r\n      \"images/blencathra 3.jpg\",\r\n    ],\r\n    imageNumber: 0,\r\n    region: \"Northern\",\r\n    height: 2847,\r\n    averageTime: \"3-4 Hours\",\r\n    difficulty: \"4.5 / 5\",\r\n    complete: false,\r\n    climbers: \"\",\r\n    date: \"\",\r\n    startTime: \"\",\r\n    ascentDuration: \"\",\r\n    summitTime: \"\",\r\n    views: \"\",\r\n    descentDuration: \"\",\r\n    finishTime: \"\",\r\n    totalWalkTime: \"\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Scafell Pike\",\r\n    image: [\r\n      \"images/scafell-pike.jpg\",\r\n      \"images/scafell-pike 2.jpg\",\r\n      \"images/scafell-pike 3.jpg\",\r\n    ],\r\n    imageNumber: 0,\r\n    region: \"Southern\",\r\n    height: 3210,\r\n    averageTime: \"4-5 Hours\",\r\n    difficulty: \"5 / 5\",\r\n    complete: false,\r\n    climbers: \"\",\r\n    date: \"\",\r\n    startTime: \"\",\r\n    ascentDuration: \"\",\r\n    summitTime: \"\",\r\n    views: \"\",\r\n    descentDuration: \"\",\r\n    finishTime: \"\",\r\n    totalWalkTime: \"\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Yewbarrow\",\r\n    image: [\r\n      \"images/yewbarrow.jpg\",\r\n      \"images/yewbarrow 2.jpg\",\r\n      \"images/yewbarrow 3.jpg\",\r\n    ],\r\n    imageNumber: 0,\r\n    region: \"Western\",\r\n    height: 2058,\r\n    averageTime: \"2-3 Hours\",\r\n    difficulty: \"3.5 / 5\",\r\n    complete: false,\r\n    climbers: \"\",\r\n    date: \"\",\r\n    startTime: \"\",\r\n    ascentDuration: \"\",\r\n    summitTime: \"\",\r\n    views: \"\",\r\n    descentDuration: \"\",\r\n    finishTime: \"\",\r\n    totalWalkTime: \"\",\r\n  },\r\n];\r\n\r\nexport default state;\r\n","import { React } from \"react\";\r\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst ImageCarousel = ({\r\n  mountain,\r\n  index,\r\n  handleLeftClick,\r\n  handleRightClick,\r\n  pdpMountain,\r\n  selectedMountain,\r\n}) => {\r\n  const { pathname } = useLocation();\r\n  const isListerPage = pathname === \"/lister\";\r\n\r\n  return (\r\n    <div className=\"image-container\">\r\n      <FaChevronLeft\r\n        className=\"fas fa-angle-left\"\r\n        onClick={() =>\r\n          isListerPage\r\n            ? handleLeftClick(index, mountain.name)\r\n            : handleLeftClick(selectedMountain, pdpMountain.name)\r\n        }\r\n      />\r\n      <img\r\n        src={\r\n          isListerPage\r\n            ? mountain.image[mountain.imageNumber]\r\n            : pdpMountain.image[pdpMountain.imageNumber]\r\n        }\r\n        className=\"mountain-image\"\r\n        alt={isListerPage ? mountain.name : pdpMountain.name}\r\n      />\r\n      <FaChevronRight\r\n        className=\"fas fa-angle-right\"\r\n        onClick={() =>\r\n          isListerPage\r\n            ? handleRightClick(index, mountain.name)\r\n            : handleRightClick(selectedMountain, pdpMountain.name)\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCarousel;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ImageCarousel from \"./ImageCarousel\";\r\n\r\nconst ListView = ({\r\n  mountains,\r\n  setMountains,\r\n  handleLeftClick,\r\n  handleRightClick,\r\n  activeFilter,\r\n  setActiveFilter,\r\n  handleClickThrough,\r\n}) => {\r\n  if (!mountains) {\r\n    return null; //this is a safety net to say if mountains doesn't exist return nothing\r\n  }\r\n\r\n  const handleComplete = (index) => {\r\n    const newData = mountains;\r\n    newData[index].complete = !newData[index].complete;\r\n    setMountains([...newData]);\r\n  };\r\n\r\n  return mountains.map((mountain, index) => (\r\n    <section className={mountain.name} id={mountain.name} key={mountain.id}>\r\n      <div\r\n        className={`mountain-border ${activeFilter && \"opaque-background\"}\r\n        ${mountain.complete === true ? \"show-mountain-border\" : \"\"}`}\r\n      >\r\n        <div className=\"name\">{mountain.name}</div>\r\n        <ImageCarousel\r\n          mountain={mountain}\r\n          handleLeftClick={handleLeftClick}\r\n          handleRightClick={handleRightClick}\r\n          index={index}\r\n        />\r\n        <div className=\"mountain-info\">\r\n          <ul>\r\n            <li className=\"mountain-region\">Region: {mountain.region}</li>\r\n            <li className=\"height\">Height (ft): {mountain.height}</li>\r\n            <li className=\"average-time\">\r\n              Average Walk Time: {mountain.averageTime}\r\n            </li>\r\n            <li className=\"difficulty stars\">\r\n              Difficulty: {mountain.difficulty}\r\n            </li>\r\n          </ul>\r\n          <div\r\n            className={mountain.complete ? \"incomplete btn\" : \"complete btn\"}\r\n            onClick={() => handleComplete(index)}\r\n          >\r\n            {mountain.complete ? \"Mark as Incomplete\" : \"Mark as Complete\"}\r\n          </div>\r\n          <Link\r\n            to=\"/pdp\"\r\n            className=\"more-info btn\"\r\n            onClick={() => handleClickThrough(index)}\r\n          >\r\n            Add More Info\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <hr className=\"seperator\" />\r\n    </section>\r\n  ));\r\n};\r\n\r\nexport default ListView;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div class=\"container container-center\">\r\n      <img src=\"images/homepage mobile.jpg\" className=\"image\" alt=\"mountains\" />\r\n      <p className=\"homepage-title\">\r\n        Wainwright\r\n        <br /> Tracker\r\n      </p>\r\n      {/* Link prevents requests to the server and allows react to manage the routing */}\r\n      <Link to=\"/lister\" className=\"homepage-btn\">\r\n        Get Tracking\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nconst Climbers = ({ pdpMountain, setClimbers }) => {\r\n  return (\r\n    <div className=\"climbers\">\r\n      <label className=\"centered-label pdp-label\">Climbers</label>\r\n      <div>\r\n        <textarea\r\n          className=\"input climber\"\r\n          type=\"text\"\r\n          placeholder=\"Who climbed this mountain?\"\r\n          onBlur={(e) => setClimbers(e.target.value)}\r\n          defaultValue={pdpMountain.climbers}\r\n        ></textarea>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Climbers;\r\n","import { React, useEffect } from \"react\";\r\n\r\nconst TopInputFields = ({\r\n  pdpMountain,\r\n  value,\r\n  summitTime,\r\n  startTime,\r\n  ascentDuration,\r\n  setSummitTime,\r\n}) => {\r\n  console.log(pdpMountain);\r\n\r\n  useEffect(() => {\r\n    if (startTime === \"\" || ascentDuration === \"\") {\r\n      return;\r\n    }\r\n    function convertNST(startTime) {\r\n      const arr = startTime.split(\":\");\r\n      const seconds = arr[0] * 3600 + arr[1] * 60;\r\n      return seconds;\r\n    }\r\n\r\n    function convertAD(ascentDuration) {\r\n      const arr = ascentDuration.split(\":\");\r\n      const seconds = arr[0] * 3600 + arr[1] * 60;\r\n      return seconds;\r\n    }\r\n\r\n    const summitTimeCalc = convertNST(startTime) + convertAD(ascentDuration);\r\n\r\n    var measuredTime = new Date(null);\r\n    measuredTime.setSeconds(summitTimeCalc); // specify value of SECONDS\r\n    console.log(summitTimeCalc);\r\n    var summitTimeString = measuredTime.toISOString().substr(11, 8);\r\n\r\n    setSummitTime(summitTimeString);\r\n    console.log(summitTimeString);\r\n  }, [ascentDuration, startTime]);\r\n\r\n  return (\r\n    <div>\r\n      <label className=\"pdp-label\">{value.title}</label>\r\n      <input\r\n        className=\"input\"\r\n        type={value.title === \"Date\" ? \"date\" : \"time\"}\r\n        onBlur={(e) => {\r\n          console.log(value.state, pdpMountain);\r\n          value.setState(e.target.value);\r\n        }}\r\n        defaultValue={\r\n          pdpMountain.summitTime === \"\" ? summitTime : value.stateName\r\n        }\r\n\r\n        //defaultValue={value.stateName}\r\n\r\n        //value.title === \"Summit Time\" ? summitTime : value.stateName\r\n\r\n        //       pdpMountain.summitTime === \"\"\r\n        //         ? summitTime\r\n        //         : pdpMountain.summitTime\r\n        //     }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopInputFields;\r\n","import React from \"react\";\r\n\r\nconst Views = ({ setViews, pdpMountain }) => {\r\n  return (\r\n    <div>\r\n      <label className=\"centered-label pdp-label\">Views</label>\r\n      <div>\r\n        <textarea\r\n          className=\"input view\"\r\n          type=\"text\"\r\n          placeholder=\"What other peaks can you see?\"\r\n          onBlur={(e) => setViews(e.target.value)}\r\n          defaultValue={pdpMountain.views}\r\n        ></textarea>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Views;\r\n","import React from \"react\";\r\n\r\nconst CompleteButton = ({ handleComplete, pdpMountain }) => {\r\n  return (\r\n    <div\r\n      className={pdpMountain.complete ? \"incomplete btn\" : \"complete btn\"}\r\n      onClick={() => handleComplete()}\r\n    >\r\n      {pdpMountain.complete ? \"Mark as Incomplete\" : \"Mark as Complete\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompleteButton;\r\n","import React from \"react\";\r\n\r\nconst DescentDurationInput = ({ pdpMountain, setDescentDuration }) => {\r\n  return (\r\n    <div>\r\n      <label className=\"pdp-label\">Decent Duration</label>\r\n      <input\r\n        className=\"input\"\r\n        type=\"time\"\r\n        defaultValue={pdpMountain.descentDuration}\r\n        onBlur={(e) => setDescentDuration(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DescentDurationInput;\r\n","import React from \"react\";\r\n\r\nconst FinishTimeInput = ({ pdpMountain, setFinishTime, finishTime }) => {\r\n  return (\r\n    <div>\r\n      <label className=\"pdp-label\">Finish Time</label>\r\n      <input\r\n        className=\"input\"\r\n        type=\"time\"\r\n        defaultValue={\r\n          pdpMountain.finishTime === \"\" ? finishTime : pdpMountain.finishTime\r\n        }\r\n        onBlur={(e) => setFinishTime(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinishTimeInput;\r\n","import React from \"react\";\r\n\r\nconst TotalWalkTimeInput = ({\r\n  pdpMountain,\r\n  totalWalkTime,\r\n  setTotalWalkTime,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <label className=\"pdp-label\">Total Walk Time</label>\r\n      <input\r\n        className=\"input total-time\"\r\n        type=\"time\"\r\n        onBlur={(e) => setTotalWalkTime(e.target.value)}\r\n        defaultValue={\r\n          pdpMountain.totalWalkTime === \"\"\r\n            ? totalWalkTime\r\n            : pdpMountain.totalWalkTime\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TotalWalkTimeInput;\r\n","import { React, useState, useEffect } from \"react\";\r\nimport Climbers from \"./Climbers\";\r\nimport TopInputFields from \"./TopInputFields\";\r\nimport BottomInputFields from \"./BottomInputFields\";\r\nimport Views from \"./Views\";\r\nimport CompleteButton from \"./CompleteButton\";\r\nimport ImageCarousel from \"../Lister/ListView/ImageCarousel\";\r\nimport DescentDurationInput from \"./DescentDurationInput\";\r\nimport FinishTimeInput from \"./FinishTimeInput\";\r\nimport TotalWalkTimeInput from \"./TotalWalkTimeInput\";\r\nimport BackButton from \"../Lister/Header/BackButton\";\r\nimport Title from \"../Lister/Header/Title\";\r\n\r\nconst MountainPage = ({\r\n  mountains,\r\n  setMountains,\r\n  selectedMountain,\r\n  handleLeftClick,\r\n  handleRightClick,\r\n}) => {\r\n  // console.log(selectedMountain);\r\n  //filter returns an array so results[0] is the mountain shown on the page. This then gets reassigned to pdpMountain\r\n  const pdpMountain = mountains[selectedMountain];\r\n\r\n  const [climbers, setClimbers] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [ascentDuration, setAscentDuration] = useState(\"\");\r\n  const [summitTime, setSummitTime] = useState(\"\");\r\n  const [views, setViews] = useState(\"\");\r\n  const [descentDuration, setDescentDuration] = useState(\"\");\r\n  const [finishTime, setFinishTime] = useState(\"\");\r\n  const [totalWalkTime, setTotalWalkTime] = useState(\"\");\r\n\r\n  const [topInputValues, setTopInputValues] = useState([\r\n    {\r\n      title: \"Date\",\r\n      state: date,\r\n      setState: setDate,\r\n      stateName: pdpMountain.date,\r\n    },\r\n    {\r\n      title: \"Start Time\",\r\n      state: startTime,\r\n      setState: setStartTime,\r\n      stateName: pdpMountain.startTime,\r\n    },\r\n    {\r\n      title: \"Ascent Duration\",\r\n      state: ascentDuration,\r\n      setState: setAscentDuration,\r\n      stateName: pdpMountain.ascentDuration,\r\n    },\r\n    {\r\n      title: \"Summit Time\",\r\n      state: summitTime,\r\n      setState: setSummitTime,\r\n      stateName: pdpMountain.summitTime,\r\n    },\r\n  ]);\r\n\r\n  // const [bottomInputValues, setBottomInputValues] = useState([\r\n  //   {\r\n  //     title: \"Descent Duration\",\r\n  //     state: descentDuration,\r\n  //     setState: setDescentDuration,\r\n  //     stateName: pdpMountain.descentDuration,\r\n  //   },\r\n  //   {\r\n  //     title: \"Finish Time\",\r\n  //     state: finishTime,\r\n  //     setState: setFinishTime,\r\n  //     stateName: pdpMountain.finishTime,\r\n  //   },\r\n  //   {\r\n  //     title: \"Total Walk Time\",\r\n  //     state: summitTime,\r\n  //     setState: setTotalWalkTime,\r\n  //     stateName: pdpMountain.totalWalkTime,\r\n  //   },\r\n  // ]);\r\n\r\n  const handleComplete = () => {\r\n    const newData = mountains;\r\n    pdpMountain.complete = !pdpMountain.complete;\r\n    setMountains([...newData]);\r\n    handleUpdate();\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    setMountains((mountains) => {\r\n      return mountains.reduce((acc, mountain) => {\r\n        if (mountain.name === pdpMountain.name) {\r\n          return [\r\n            ...acc,\r\n            {\r\n              ...mountain,\r\n              climbers: climbers,\r\n              date: date,\r\n              ascentDuration: ascentDuration,\r\n              startTime: startTime,\r\n              summitTime: summitTime,\r\n              views: views,\r\n              descentDuration: descentDuration,\r\n              finishTime: finishTime,\r\n              totalWalkTime: totalWalkTime,\r\n            },\r\n          ];\r\n        } else {\r\n          return [...acc, mountain];\r\n        }\r\n      }, []);\r\n    });\r\n    window.history.back();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (summitTime === \"\" || descentDuration === \"\") {\r\n      return;\r\n    }\r\n    function convertNST(summitTime) {\r\n      const arr = summitTime.split(\":\");\r\n      const seconds = arr[0] * 3600 + arr[1] * 60;\r\n      return seconds;\r\n    }\r\n\r\n    function convertDD(descentDuration) {\r\n      const arr = descentDuration.split(\":\");\r\n      const seconds = arr[0] * 3600 + arr[1] * 60;\r\n      return seconds;\r\n    }\r\n\r\n    const finishTimeCalc = convertNST(summitTime) + convertDD(descentDuration);\r\n\r\n    var measuredTime = new Date(null);\r\n    measuredTime.setSeconds(finishTimeCalc); // specify value of SECONDS\r\n    var finishTimeString = measuredTime.toISOString().substr(11, 8);\r\n    console.log(finishTimeString);\r\n\r\n    setFinishTime(finishTimeString);\r\n  }, [summitTime, descentDuration]);\r\n\r\n  useEffect(() => {\r\n    if (ascentDuration === \"\" || descentDuration === \"\") {\r\n      return;\r\n    }\r\n    function convertAD(ascentDuration) {\r\n      const arr = ascentDuration.split(\":\");\r\n      const seconds = arr[0] * 3600 + arr[1] * 60;\r\n      return seconds;\r\n    }\r\n\r\n    function convertDD(descentDuration) {\r\n      const arr = descentDuration.split(\":\");\r\n      const seconds = arr[0] * 3600 + arr[1] * 60;\r\n      return seconds;\r\n    }\r\n\r\n    const totalWalkTimeCalc =\r\n      convertAD(ascentDuration) + convertDD(descentDuration);\r\n\r\n    var measuredTime = new Date(null);\r\n    measuredTime.setSeconds(totalWalkTimeCalc); // specify value of SECONDS\r\n    var totalWalkTimeString = measuredTime.toISOString().substr(11, 8);\r\n\r\n    setTotalWalkTime(totalWalkTimeString);\r\n  }, [ascentDuration, descentDuration]);\r\n\r\n  return (\r\n    // <div>\r\n    //   <header className=\"header\">\r\n    //     <nav className=\"nav\">\r\n    //       <div className=\"nav-header\">\r\n    //         <BackButton />\r\n    //         <Title className=\"title\" />\r\n    //       </div>\r\n    //     </nav>\r\n    //   </header>\r\n    <div className=\"main-section\">\r\n      <section className={`${pdpMountain.name}`}>\r\n        <div className=\"mountain-border\">\r\n          <div className=\"name\">{pdpMountain.name}</div>\r\n          <ImageCarousel\r\n            pdpMountain={pdpMountain}\r\n            handleLeftClick={handleLeftClick}\r\n            handleRightClick={handleRightClick}\r\n            selectedMountain={selectedMountain}\r\n          />\r\n          <div className=\"mountain-info\">\r\n            <form className=\"pdp-form\">\r\n              <Climbers pdpMountain={pdpMountain} setClimbers={setClimbers} />\r\n              <div className=\"first-pdp-container\">\r\n                {topInputValues.map((value) => (\r\n                  <TopInputFields\r\n                    pdpMountain={pdpMountain}\r\n                    value={value}\r\n                    summitTime={summitTime}\r\n                    key={mountains.id}\r\n                    startTime={startTime}\r\n                    ascentDuration={ascentDuration}\r\n                    setSummitTime={setSummitTime}\r\n                  />\r\n                ))}\r\n              </div>\r\n              <Views setViews={setViews} pdpMountain={pdpMountain} />\r\n              <div className=\"second-pdp-container\">\r\n                {/* {bottomInputValues.map((value) => ( */}\r\n                {/* <BottomInputFields\r\n                  pdpMountain={pdpMountain}\r\n                  // value={value}\r\n                  totalWalkTime={totalWalkTime}\r\n                  finishTime={finishTime}\r\n                  descentDuration={descentDuration}\r\n                  setDescentDuration={setDescentDuration}\r\n                  setFinishTime={setFinishTime}\r\n                  setTotalWalkTime={setTotalWalkTime}\r\n                /> */}\r\n                {/* ))} */}\r\n                <DescentDurationInput\r\n                  pdpMountain={pdpMountain}\r\n                  setDescentDuration={setDescentDuration}\r\n                />\r\n                <FinishTimeInput\r\n                  pdpMountain={pdpMountain}\r\n                  finishTime={finishTime}\r\n                  setFinishTime={setFinishTime}\r\n                />\r\n                <TotalWalkTimeInput\r\n                  pdpMountain={pdpMountain}\r\n                  totalWalkTime={totalWalkTime}\r\n                  setTotalWalkTime={setTotalWalkTime}\r\n                />\r\n              </div>\r\n              <CompleteButton\r\n                handleComplete={handleComplete}\r\n                pdpMountain={pdpMountain}\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default MountainPage;\r\n","import Header from \"./Components/Lister/Header/Header\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Footer from \"./Components/Footer/Footer\";\r\nimport state from \"./State/State\";\r\nimport ListView from \"./Components/Lister/ListView/ListView\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport HomePage from \"./Components/HomePage/HomePage\";\r\nimport MountainPage from \"./Components/PDP/MountainPage\";\r\n\r\nfunction App() {\r\n  const [initialMountains, setInitialMountains] = useState(\r\n    window.localStorage.setItem(\"initialMountains\", JSON.stringify(state))\r\n  );\r\n\r\n  const [mountains, setMountains] = useState(\r\n    JSON.parse(window.localStorage.getItem(\"mountains\")) ||\r\n      JSON.parse(window.localStorage.getItem(\"initialMountains\"))\r\n  );\r\n\r\n  const [filteredMountains, setFilteredMountains] = useState(mountains);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"mountains\", JSON.stringify(mountains));\r\n  }, [mountains]);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"mountains\", JSON.stringify(filteredMountains));\r\n  }, [filteredMountains]);\r\n\r\n  const [activeFilter, setActiveFilter] = useState(false);\r\n  const [selectedMountain, setSelectedMountain] = useState(0);\r\n\r\n  const handleRightClick = (index, mountainName) => {\r\n    // const mountain = mountains.id === id;\r\n    const mountain = mountains[index];\r\n    console.log(index, filteredMountains, mountainName);\r\n    if (\r\n      mountain.name === mountainName &&\r\n      mountain.imageNumber < mountain.image.length - 1\r\n    ) {\r\n      let newData = mountains;\r\n      newData[index].imageNumber = newData[index].imageNumber + 1;\r\n      console.log(newData[index].image);\r\n      setMountains([...newData]); //spreading creates a new instance which causes the App to re-render in a new order. This fixes the issue when the page only renders on re-saving\r\n      // setImageNumber((imgNum) => ++imgNum);//use index + 1 or arrow function with the ++ applied pre\r\n      console.log(newData[index].imageNumber);\r\n    } else {\r\n      let newData = mountains;\r\n      newData[index].imageNumber = newData[index].imageNumber = 0;\r\n      setMountains([...newData]);\r\n    }\r\n  };\r\n\r\n  const handleLeftClick = (index, mountainName) => {\r\n    const mountain = mountains[index];\r\n    console.log(index, filteredMountains, mountainName);\r\n    if (mountain.name === mountainName && mountain.imageNumber > 0) {\r\n      let newData = mountains;\r\n      newData[index].imageNumber = newData[index].imageNumber - 1;\r\n      console.log(newData[index].image);\r\n      setMountains([...newData]); //spreading creates a new instance which causes the App to re-render in a new order. This fixes the issue when the page only renders on re-saving\r\n      // setImageNumber((imgNum) => ++imgNum);//use index + 1 or arrow function with the ++ applied pre\r\n      console.log(newData[index].imageNumber);\r\n    } else {\r\n      let newData = mountains;\r\n      newData[index].imageNumber = mountains[index].image.length - 1;\r\n      setMountains([...newData]);\r\n    }\r\n  };\r\n\r\n  const handleClickThrough = (index) => {\r\n    //grabbing the index which is selected and passing down as props lower down\r\n    setSelectedMountain(index);\r\n    // console.log(selectedMountain);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <HomePage />\r\n          </Route>\r\n          <Route exact path=\"/lister\">\r\n            <Header\r\n              mountains={mountains}\r\n              setMountains={setFilteredMountains}\r\n              setActiveFilter={setActiveFilter}\r\n              activeFilter={activeFilter}\r\n            />\r\n            <ListView\r\n              mountains={filteredMountains}\r\n              setMountains={setFilteredMountains}\r\n              handleLeftClick={handleLeftClick}\r\n              handleRightClick={handleRightClick}\r\n              setActiveFilter={setActiveFilter}\r\n              activeFilter={activeFilter}\r\n              handleClickThrough={handleClickThrough}\r\n            />\r\n            <Footer />\r\n          </Route>\r\n          <Route exact path=\"/pdp\">\r\n            <Header />\r\n            <MountainPage\r\n              mountains={filteredMountains}\r\n              setMountains={setFilteredMountains}\r\n              selectedMountain={selectedMountain}\r\n              setActiveFilter={setActiveFilter}\r\n              handleLeftClick={handleLeftClick}\r\n              handleRightClick={handleRightClick}\r\n            />\r\n            <Footer />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}